name: Build and Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag name (e.g., v1.0.0)'
        required: true
      release_description:
        description: 'Enter a description for this release'
        required: false

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: To-Do-Board-Backend
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: ${{ env.PROJECT_NAME }} ${{ github.event.inputs.tag_name }}
          body: ${{ github.event.inputs.release_description }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build-and-upload:
    name: Build and Upload for ${{ matrix.os }} (${{ matrix.target }})
    needs: create-release
    runs-on: ${{ matrix.os }}
    env:
      PROJECT_NAME: To-Do-Board-Backend
      VERSION: ${{ github.event.inputs.tag_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            target-label: windows-x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            target-label: linux-x64
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            target-label: linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

    #   - name: Build project
    #     uses: actions-rs/cargo@v1
    #     with:
    #       command: build
    #       args: --release --target ${{ matrix.target }}

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}
        working-directory: ./Backend

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./Backend/target/${{ matrix.target }}/release/${{ env.PROJECT_NAME }}${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
          asset_name: ${{ env.PROJECT_NAME }}-${{ env.VERSION }}-${{ matrix.target-label }}${{ matrix.target == 'x86_64-pc-windows-msvc' && '.exe' || '' }}
          asset_content_type: application/octet-stream